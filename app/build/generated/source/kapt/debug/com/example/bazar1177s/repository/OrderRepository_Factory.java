// Generated by Dagger (https://dagger.dev).
package com.example.bazar1177s.repository;

import com.example.bazar1177s.data.db.ProductDao;
import com.example.bazar1177s.network.ProductService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class OrderRepository_Factory implements Factory<OrderRepository> {
  private final Provider<ProductService> productServiceProvider;

  private final Provider<ProductDao> productDaoProvider;

  public OrderRepository_Factory(Provider<ProductService> productServiceProvider,
      Provider<ProductDao> productDaoProvider) {
    this.productServiceProvider = productServiceProvider;
    this.productDaoProvider = productDaoProvider;
  }

  @Override
  public OrderRepository get() {
    return newInstance(productServiceProvider.get(), productDaoProvider.get());
  }

  public static OrderRepository_Factory create(Provider<ProductService> productServiceProvider,
      Provider<ProductDao> productDaoProvider) {
    return new OrderRepository_Factory(productServiceProvider, productDaoProvider);
  }

  public static OrderRepository newInstance(ProductService productService, ProductDao productDao) {
    return new OrderRepository(productService, productDao);
  }
}
